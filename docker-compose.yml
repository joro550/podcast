services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=bob
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=podcast
    # healthcheck:
    #   test: ["CMD-SHELL", pg_isready]
    #   interval: 1s
    #   timeout: 5s
    #   retires: 10

  backend:
    container_name: podcast_backend
    build:
      context: backend
      # dockerfile: dev.dockerfile
    develop:
      watch:
        - action: rebuild
          path: ./backend
    restart: always
    ports:
      - 3111:3111
    # volumes:
    #   - "./backend:/app"
    environment:
      - "Connection_string=postgres://bob:password@db:5432/podcast?sslmode=disable"
    depends_on:
      - db
        # condition: service_healthy

  frontend:
    container_name: podcast_frontend
    build:
      context: frontend
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: /app/web
          target: /app/web
          ignore:
            - node_modules/
    environment:
      - NODE_ENV=development
      - BACKEND_URL=http://backend:3111
    ports:
      - 3000:3000

    volumes:
      - "./frontend:/app"
    depends_on:
      - backend
